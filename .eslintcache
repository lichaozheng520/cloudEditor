[{"/Users/mac/Desktop/2021师资培训Electron/myproject/src/index.js":"1","/Users/mac/Desktop/2021师资培训Electron/myproject/src/App.js":"2","/Users/mac/Desktop/2021师资培训Electron/myproject/src/reportWebVitals.js":"3","/Users/mac/Desktop/2021师资培训Electron/myproject/src/components/FileSearch.js":"4","/Users/mac/Desktop/2021师资培训Electron/myproject/src/components/FileList.js":"5","/Users/mac/Desktop/2021师资培训Electron/myproject/src/utils/defaultFiles.js":"6","/Users/mac/Desktop/2021师资培训Electron/myproject/src/hooks/useKeyPress.js":"7","/Users/mac/Desktop/2021师资培训Electron/myproject/src/components/BottomBtn.js":"8","/Users/mac/Desktop/2021师资培训Electron/myproject/src/components/TabList.js":"9","/Users/mac/Desktop/2021师资培训Electron/myproject/src/utils/helper.js":"10","/Users/mac/Desktop/2021师资培训Electron/myproject/src/utils/fileHelper.js":"11","/Users/mac/Desktop/2021师资培训Electron/myproject/src/hooks/useContextMenu.js":"12","/Users/mac/Desktop/2021师资培训Electron/myproject/src/hooks/useIpcRenderer.js":"13"},{"size":500,"mtime":499162500000,"results":"14","hashOfConfig":"15"},{"size":12267,"mtime":1612775535000,"results":"16","hashOfConfig":"15"},{"size":362,"mtime":499162500000,"results":"17","hashOfConfig":"15"},{"size":2774,"mtime":1612249215000,"results":"18","hashOfConfig":"15"},{"size":4990,"mtime":1612756776000,"results":"19","hashOfConfig":"15"},{"size":382,"mtime":1611198019000,"results":"20","hashOfConfig":"15"},{"size":798,"mtime":1612516212000,"results":"21","hashOfConfig":"15"},{"size":645,"mtime":1611285566000,"results":"22","hashOfConfig":"15"},{"size":1616,"mtime":1611197737000,"results":"23","hashOfConfig":"15"},{"size":698,"mtime":1612755223000,"results":"24","hashOfConfig":"15"},{"size":507,"mtime":1611392581000,"results":"25","hashOfConfig":"15"},{"size":862,"mtime":1612754525000,"results":"26","hashOfConfig":"15"},{"size":544,"mtime":1612775392000,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"ymyh6e",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"42"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"30"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"30"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/mac/Desktop/2021师资培训Electron/myproject/src/index.js",[],["59","60"],"/Users/mac/Desktop/2021师资培训Electron/myproject/src/App.js",[],"/Users/mac/Desktop/2021师资培训Electron/myproject/src/reportWebVitals.js",[],"/Users/mac/Desktop/2021师资培训Electron/myproject/src/components/FileSearch.js",[],"/Users/mac/Desktop/2021师资培训Electron/myproject/src/components/FileList.js",["61"],"import React, { useState, useEffect, useRef } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrash, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { faMarkdown } from '@fortawesome/free-brands-svg-icons'\nimport PropTypes from 'prop-types'\nimport useKeyPress from '../hooks/useKeyPress'\r\nimport useContextMenu from '../hooks/useContextMenu'\r\nimport { getParentNode } from '../utils/helper'\n\n// load nodejs module\nconst { remote } = window.require('electron')\nconst { Menu, MenuItem } = remote\n\nconst FileList = ({ files, onFileClick, onSaveEdit, onFileDelete }) => {\n  const [ editStatus, setEditStatus ] = useState(false)\r\n  const [ value, setValue ] = useState('')\n  let node = useRef(null)\n  const enterPressed = useKeyPress(13)\r\n  const escPressed = useKeyPress(27)\n  \n  const closeSearch = (editItem) => {\n    // 设置默认编辑状态\n    setEditStatus(false)\n    // 设置默认值\n    setValue('')\n    // if we are editing a newly created file,\n    // we should delete this file when pressing esc\n    if(editItem.isNew){\n      onFileDelete(editItem.id)\n    }\n  }\n  \n  useEffect(() => {\n    const newFile = files.find(file => file.isNew)\n    // console.log(newFile) //undefined\n    if(newFile){\n      setEditStatus(newFile.id)\n      setValue(newFile.title)\n    }\n    // 当files有所变化的时候运行该useEffect\n  }, [files])\n  \n  const clickedItem = useContextMenu([\n    {\n      label: '打开',\n      click: () => {\n        // console.log('clicking', clickedItem)\n        const parentElement = getParentNode(clickedItem.current, 'file-item')\n        if(parentElement){\n          onFileClick(parentElement.dataset.id)\n        }\n        //console.log(parentElement.dataset.id)\n      }\n    },\n    {\n      label: '重命名',\n      click: () => {\n        console.log('renaming')\n      }\n    },\n    {\n      label: '删除',\n      click: () => {\n        console.log('deleting')\n      }\n    }\n  ], '.file-list', [files])\n  \n  /*useEffect(() => {\n    const menu = new Menu()\n    menu.append(new MenuItem({\n      label: '打开',\n      click: () => {\n        console.log('clicking')\n      }\n    }))\n    menu.append(new MenuItem({\n      label: '重命名',\n      click: () => {\n        console.log('renaming')\n      }\n    }))\n    menu.append(new MenuItem({\n      label: '删除',\n      click: () => {\n        console.log('deleting')\n      }\n    }))\n    const handleContextMenu = (e) => {\n      menu.popup({window: remote.getCurrentWindow()})\n    }\n    window.addEventListener('contextmenu', handleContextMenu)\n    return () => {\n      window.removeEventListener('contextmenu', handleContextMenu)\n    }\n  }) */\n\n  useEffect(() => {\n    const editItem = files.find(file => file.id === editStatus)\r\n    // 如果是enter键/同时是编辑状态/同时value值不为空,那么就传入搜索值\n    if(enterPressed && editStatus && (value.trim() !== '')){\n      onSaveEdit(editItem.id, value, editItem.isNew)\n      // 设置编辑状态为默认值\n      setEditStatus(false)\n      // 设置值为默认值\n      setValue('')\n      // 如果是Esc键/同时是编辑状态，那么就关闭\n    }else if(escPressed && editStatus){\n      closeSearch(editItem)\n    }\n  })\n  return (\n    <ul className=\"list-group list-group-flush file-list\">\n      {\n        files.map(file => (\n          <li className=\"list-group-item bg-light row d-flex align-items-center file-item mx-0\"\n              key={file.id}\n              data-id={file.id}\n              data-title={file.title}\n          >\n            { ((file.id !== editStatus) && !file.isNew) &&\n              <>\n                <span className=\"col-2\">\n                  <FontAwesomeIcon \n                    size=\"lg\" \n                    icon={ faMarkdown } \n                  />\r\n                </span>\n                <span \n                  className=\"col-6 c-link\"\n                  onClick={() => {onFileClick(file.id)}}\n                >\n                  {file.title}\n                </span>\n              </>\n            }\n            { ((file.id === editStatus) || file.isNew) &&\n              <>\n                <input className=\"form-control col-10\" \n                  value={value}\n                  placeholder=\"请输入文件名称\"\n                  onChange={ (e) => { setValue(e.target.value) } } />\n                <button type=\"button\"\n                  className=\"icon-button col-2\"\n                  onClick={() => { closeSearch(file)} }>\n                  <FontAwesomeIcon \n                    title=\"关闭\"\n                    size=\"lg\"\n                    icon={ faTimes }\n                  />\n                </button>\n              </>\n            }\n          </li>\n        ))\n      }\n    </ul>\n  )\n}\n\n// 添加属性检查\nFileList.propTypes = {\n  // 要求必须是数组\n  files: PropTypes.array,\n  // 要求必须是函数\n  onFileClick: PropTypes.func,\n  onFileDelete: PropTypes.func,\n  onSaveEdit: PropTypes.func,\n}\n\nexport default FileList\n","/Users/mac/Desktop/2021师资培训Electron/myproject/src/utils/defaultFiles.js",[],["62","63"],"/Users/mac/Desktop/2021师资培训Electron/myproject/src/hooks/useKeyPress.js",[],"/Users/mac/Desktop/2021师资培训Electron/myproject/src/components/BottomBtn.js",[],"/Users/mac/Desktop/2021师资培训Electron/myproject/src/components/TabList.js",["64"],"import React from 'react'\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classname'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport './TabList.scss'\n\nconst TabList = ({ files, activeId, unsaveIds, onTabClick, onCloseTab }) => {\n  return (\n    <ul className=\"nav nav-pills tablist-component\">\n      { files.map(file => {\n        const withUnsavedMark = unsaveIds.includes(file.id)\n        const fClassName = classNames({\n          'nav-link': true,\n          'active': file.id === activeId,\n          'withUnsaved': withUnsavedMark\n        })\n        return (\n          <li className=\"nav-item\" key={file.id}>\n            <a\n              href=\"#\"\n              className={fClassName}\n              onClick={(e) => { e.preventDefault(); onTabClick(file.id) }}\n            >\n              { file.title }\n              <span \n                className=\"ml-2 close-icon\"\n                onClick={(e) => {e.stopPropagation(); onCloseTab(file.id)}}\n              >\n                <FontAwesomeIcon\n                  icon={ faTimes }\n                />\n              </span>\n              { withUnsavedMark && <span className=\"rounded-circle ml-2 unsaved-icon\"></span> }\n            </a>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\n// 添加属性检查\nTabList.propTypes = {\n  files: PropTypes.array,\n  activeId: PropTypes.array,\n  onTabClick: PropTypes.func,\n  onCloseTab: PropTypes.func,\n}\n// 默认Props，当不提供的时候设置成空数组\nTabList.defaultProps = {\n  unsaveIds: []\n}\n\nexport default TabList\n","/Users/mac/Desktop/2021师资培训Electron/myproject/src/utils/helper.js",[],"/Users/mac/Desktop/2021师资培训Electron/myproject/src/utils/fileHelper.js",[],"/Users/mac/Desktop/2021师资培训Electron/myproject/src/hooks/useContextMenu.js",["65","66"],"import { useEffect, useRef } from 'react'\nconst { remote } = window.require('electron')\nconst { Menu, MenuItem } = remote\n\nconst useContextMenu = (itemArr, targetSelector, deps) => {\n  let clickedElement = useRef(null)\n  useEffect(() => {\n    const menu = new Menu()\n    itemArr.forEach(item => {\n      menu.append(new MenuItem(item))\n    })\n    const handleContextMenu = (e) => {\n      // only show the context menu on current dom element or targetSelector\n      if(document.querySelector(targetSelector).contains(e.target)){\n        clickedElement.current = e.target\n        menu.popup({ window: remote.getCurrentWindow() })\n      }\n    }\n    window.addEventListener('contextmenu', handleContextMenu)\n    return () => {\n      window.removeEventListener('contextmenu', handleContextMenu)\n    }\n  }, deps)\n  return clickedElement\n}\n\nexport default useContextMenu","/Users/mac/Desktop/2021师资培训Electron/myproject/src/hooks/useIpcRenderer.js",[],{"ruleId":"67","replacedBy":"68"},{"ruleId":"69","replacedBy":"70"},{"ruleId":"71","severity":1,"message":"72","line":98,"column":3,"nodeType":"73","endLine":98,"endColumn":12,"suggestions":"74"},{"ruleId":"67","replacedBy":"75"},{"ruleId":"69","replacedBy":"76"},{"ruleId":"77","severity":1,"message":"78","line":20,"column":13,"nodeType":"79","endLine":24,"endColumn":14},{"ruleId":"71","severity":1,"message":"80","line":23,"column":6,"nodeType":"73","endLine":23,"endColumn":10},{"ruleId":"71","severity":1,"message":"81","line":23,"column":6,"nodeType":"73","endLine":23,"endColumn":10,"suggestions":"82"},"no-native-reassign",["83"],"no-negated-in-lhs",["84"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setEditStatus'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [files, enterPressed, editStatus, value, escPressed, onSaveEdit, closeSearch] as a second argument to the useEffect Hook.","Identifier",["85"],["83"],["84"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","React Hook useEffect was passed a dependency list that is not an array literal. This means we can't statically verify whether you've passed the correct dependencies.","React Hook useEffect has missing dependencies: 'itemArr' and 'targetSelector'. Either include them or remove the dependency array.",["86"],"no-global-assign","no-unsafe-negation",{"desc":"87","fix":"88"},{"desc":"89","fix":"90"},"Add dependencies array: [files, enterPressed, editStatus, value, escPressed, onSaveEdit, closeSearch]",{"range":"91","text":"92"},"Update the dependencies array to be: [itemArr, targetSelector]",{"range":"93","text":"94"},[3039,3039],", [files, enterPressed, editStatus, value, escPressed, onSaveEdit, closeSearch]",[800,804],"[itemArr, targetSelector]"]