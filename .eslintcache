[{"/Users/mac/Desktop/2021师资培训Electron/myproject/src/index.js":"1","/Users/mac/Desktop/2021师资培训Electron/myproject/src/App.js":"2","/Users/mac/Desktop/2021师资培训Electron/myproject/src/reportWebVitals.js":"3","/Users/mac/Desktop/2021师资培训Electron/myproject/src/components/FileSearch.js":"4","/Users/mac/Desktop/2021师资培训Electron/myproject/src/components/FileList.js":"5","/Users/mac/Desktop/2021师资培训Electron/myproject/src/utils/defaultFiles.js":"6","/Users/mac/Desktop/2021师资培训Electron/myproject/src/hooks/useKeyPress.js":"7","/Users/mac/Desktop/2021师资培训Electron/myproject/src/components/BottomBtn.js":"8","/Users/mac/Desktop/2021师资培训Electron/myproject/src/components/TabList.js":"9"},{"size":500,"mtime":499162500000,"results":"10","hashOfConfig":"11"},{"size":5413,"mtime":1611311116000,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":499162500000,"results":"13","hashOfConfig":"11"},{"size":2697,"mtime":1611301999000,"results":"14","hashOfConfig":"11"},{"size":4167,"mtime":1611311956000,"results":"15","hashOfConfig":"11"},{"size":382,"mtime":1611198019000,"results":"16","hashOfConfig":"11"},{"size":802,"mtime":1611129223000,"results":"17","hashOfConfig":"11"},{"size":645,"mtime":1611285566000,"results":"18","hashOfConfig":"11"},{"size":1616,"mtime":1611197737000,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"ymyh6e",{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"29","messages":"30","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"22"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"22"},"/Users/mac/Desktop/2021师资培训Electron/myproject/src/index.js",[],["43","44"],"/Users/mac/Desktop/2021师资培训Electron/myproject/src/App.js",[],"/Users/mac/Desktop/2021师资培训Electron/myproject/src/reportWebVitals.js",[],"/Users/mac/Desktop/2021师资培训Electron/myproject/src/components/FileSearch.js",[],"/Users/mac/Desktop/2021师资培训Electron/myproject/src/components/FileList.js",["45"],"import React, { useState, useEffect, useRef } from 'react'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faEdit, faTrash, faTimes } from '@fortawesome/free-solid-svg-icons'\r\nimport { faMarkdown } from '@fortawesome/free-brands-svg-icons'\nimport PropTypes from 'prop-types'\nimport useKeyPress from '../hooks/useKeyPress.js'\n\nconst FileList = ({ files, onFileClick, onSaveEdit, onFileDelete }) => {\n  const [ editStatus, setEditStatus ] = useState(false)\r\n  const [ value, setValue ] = useState('')\n  let node = useRef(null)\n  const enterPressed = useKeyPress(13)\r\n  const escPressed = useKeyPress(27)\n  const closeSearch = (editItem) => {\n    // 设置默认编辑状态\n    setEditStatus(false)\n    // 设置默认值\n    setValue('')\n    // if we are editing a newly created file,\n    // we should delete this file when pressing esc\n    if(editItem.isNew){\n      onFileDelete(editItem.id)\n    }\n  }\n\n  useEffect(() => {\n    const newFile = files.find(file => file.isNew)\n    console.log(newFile)\n    if(newFile){\n      setEditStatus(newFile.id)\n      setValue(newFile.title)\n    }\n    // 当files有所变化的时候运行该useEffect\n  }, [files])\n\n  useEffect(() => {\n    const editItem = files.find(file => file.id === editStatus)\r\n    // 如果是enter键/同时是编辑状态/同时value值不为空,那么就传入搜索值\n    if(enterPressed && editStatus && (value.trim() !== '')){\n      onSaveEdit(editItem.id, value)\n      // 设置编辑状态为默认值\n      setEditStatus(false)\n      // 设置值为默认值\n      setValue('')\n      // 如果是Esc键/同时是编辑状态，那么就关闭\n    }else if(escPressed && editStatus){\n      closeSearch(editItem)\n    }\n  })\n  return (\n    <ul className=\"list-group list-group-flush file-list\">\n      {\n        files.map(file => (\n          <li className=\"list-group-item bg-light row d-flex align-items-center file-item mx-0\"\n              key={file.id}\n          >\n            { ((file.id !== editStatus) && !file.isNew) &&\n              <>\n                <span className=\"col-2\">\n                  <FontAwesomeIcon \n                    size=\"lg\" \n                    icon={ faMarkdown } \n                  />\r\n                </span>\n                <span \n                  className=\"col-6 c-link\"\n                  onClick={() => {onFileClick(file.id)}}\n                >\n                  {file.title}\n                </span>\n                <button \n                  type=\"button\"\n                  className=\"icon-button col-2\"\n                  onClick={() => { setEditStatus(file.id); setValue(file.title); }}\n                >\n                  <FontAwesomeIcon \n                    title=\"编辑\" \n                    size=\"lg\" \n                    icon={ faEdit }\n                  />\n                </button>\n                <button \n                  type=\"button\"\n                  className=\"icon-button col-2\"\n                  onClick={() => { onFileDelete(file.id) }}\n                >\n                  <FontAwesomeIcon\n                    title=\"删除\" \n                    size=\"lg\" \n                    icon={ faTrash }\n                  />\n                </button>\n              </>\n            }\n            { ((file.id === editStatus) || file.isNew) &&\n              <>\n                <input className=\"form-control col-10\" \n                  value={value}\n                  placeholder=\"请输入文件名称\"\n                  onChange={ (e) => { setValue(e.target.value) } } />\n                <button type=\"button\"\n                  className=\"icon-button col-2\"\n                  onClick={() => { closeSearch(file)} }>\n                  <FontAwesomeIcon \n                    title=\"关闭\"\n                    size=\"lg\"\n                    icon={ faTimes }\n                  />\n                </button>\n              </>\n            }\n          </li>\n        ))\n      }\n    </ul>\n  )\n}\n\n// 添加属性检查\nFileList.propTypes = {\n  // 要求必须是数组\n  files: PropTypes.array,\n  // 要求必须是函数\n  onFileClick: PropTypes.func,\n  onFileDelete: PropTypes.func,\n  onSaveEdit: PropTypes.func,\n}\n\nexport default FileList\n","/Users/mac/Desktop/2021师资培训Electron/myproject/src/utils/defaultFiles.js",[],"/Users/mac/Desktop/2021师资培训Electron/myproject/src/hooks/useKeyPress.js",["46"],"import { useState, useEffect } from 'react'\n\nconst useKeyPress = (targetKeyCode) => {\n  const [keyPressed, setKeyPressed] = useState(false)\n  \n  const keyDownHandler = ({ keyCode }) => {\n    if(keyCode === targetKeyCode){\n      setKeyPressed(true)\n    }\n  }\n  const keyUpHandler = ({ keyCode }) => {\n    if(keyCode === targetKeyCode){\n      setKeyPressed(false)\n    }\n  }\n  \n  useEffect(() => {\n    document.addEventListener('keydown', keyDownHandler)\r\n    document.addEventListener('keyup', keyUpHandler)\n    return () => {\n      // 清除副作用\n      document.removeEventListener('keydown', keyDownHandler)\n      document.removeEventListener('keyup', keyUpHandler)\n    }\n    // 这里有一个空数组(为了卸载的时候清除掉)\n  }, [])\n  \n  return keyPressed\n}\n\nexport default useKeyPress\n",["47","48"],"/Users/mac/Desktop/2021师资培训Electron/myproject/src/components/BottomBtn.js",[],"/Users/mac/Desktop/2021师资培训Electron/myproject/src/components/TabList.js",["49"],"import React from 'react'\nimport PropTypes from 'prop-types'\r\nimport classNames from 'classname'\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faTimes } from '@fortawesome/free-solid-svg-icons'\nimport './TabList.scss'\n\nconst TabList = ({ files, activeId, unsaveIds, onTabClick, onCloseTab }) => {\n  return (\n    <ul className=\"nav nav-pills tablist-component\">\n      { files.map(file => {\n        const withUnsavedMark = unsaveIds.includes(file.id)\n        const fClassName = classNames({\n          'nav-link': true,\n          'active': file.id === activeId,\n          'withUnsaved': withUnsavedMark\n        })\n        return (\n          <li className=\"nav-item\" key={file.id}>\n            <a\n              href=\"#\"\n              className={fClassName}\n              onClick={(e) => { e.preventDefault(); onTabClick(file.id) }}\n            >\n              { file.title }\n              <span \n                className=\"ml-2 close-icon\"\n                onClick={(e) => {e.stopPropagation(); onCloseTab(file.id)}}\n              >\n                <FontAwesomeIcon\n                  icon={ faTimes }\n                />\n              </span>\n              { withUnsavedMark && <span className=\"rounded-circle ml-2 unsaved-icon\"></span> }\n            </a>\n          </li>\n        )\n      })}\n    </ul>\n  )\n}\n\n// 添加属性检查\nTabList.propTypes = {\n  files: PropTypes.array,\n  activeId: PropTypes.array,\n  onTabClick: PropTypes.func,\n  onCloseTab: PropTypes.func,\n}\n// 默认Props，当不提供的时候设置成空数组\nTabList.defaultProps = {\n  unsaveIds: []\n}\n\nexport default TabList\n",{"ruleId":"50","replacedBy":"51"},{"ruleId":"52","replacedBy":"53"},{"ruleId":"54","severity":1,"message":"55","line":36,"column":3,"nodeType":"56","endLine":36,"endColumn":12,"suggestions":"57"},{"ruleId":"54","severity":1,"message":"58","line":26,"column":6,"nodeType":"59","endLine":26,"endColumn":8,"suggestions":"60"},{"ruleId":"50","replacedBy":"61"},{"ruleId":"52","replacedBy":"62"},{"ruleId":"63","severity":1,"message":"64","line":20,"column":13,"nodeType":"65","endLine":24,"endColumn":14},"no-native-reassign",["66"],"no-negated-in-lhs",["67"],"react-hooks/exhaustive-deps","React Hook useEffect contains a call to 'setEditStatus'. Without a list of dependencies, this can lead to an infinite chain of updates. To fix this, pass [files, enterPressed, editStatus, value, escPressed, onSaveEdit, closeSearch] as a second argument to the useEffect Hook.","Identifier",["68"],"React Hook useEffect has missing dependencies: 'keyDownHandler' and 'keyUpHandler'. Either include them or remove the dependency array.","ArrayExpression",["69"],["66"],["67"],"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"70","fix":"71"},{"desc":"72","fix":"73"},"Add dependencies array: [files, enterPressed, editStatus, value, escPressed, onSaveEdit, closeSearch]",{"range":"74","text":"75"},"Update the dependencies array to be: [keyDownHandler, keyUpHandler]",{"range":"76","text":"77"},[1552,1552],", [files, enterPressed, editStatus, value, escPressed, onSaveEdit, closeSearch]",[699,701],"[keyDownHandler, keyUpHandler]"]